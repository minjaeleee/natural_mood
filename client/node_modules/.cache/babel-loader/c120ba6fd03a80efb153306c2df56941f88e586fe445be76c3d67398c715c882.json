{"ast":null,"code":"import { BASE_URL } from \"./const\";\nexport const getBeer = async types => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/beers/ale`);\n  return response.ok ? await response.json() : null;\n};\nexport const getWine = async values => {\n  const list = [];\n  for (const value of values) {\n    list.push(await fetch(`${BASE_URL}/wines/${value}`));\n  }\n  const rp = await Promise.all(list);\n  console.log(\"rp\", rp);\n  const response = await fetch(`${BASE_URL}/wines/reds`);\n  if (!response.ok) return null;\n  const jsonResult = await response.json();\n  const result = jsonResult.slice(0, 20);\n  return result;\n};\nexport const getCoffee = async types => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/coffee/iced`);\n  return response.ok ? await response.json() : null;\n};","map":{"version":3,"names":["BASE_URL","getBeer","types","response","fetch","ok","json","getWine","values","list","value","push","rp","Promise","all","console","log","jsonResult","result","slice","getCoffee"],"sources":["/Users/minjaelee/Desktop/development/natural_mood/src/api/beverage.ts"],"sourcesContent":["import { IBeer, ICoffee, IWine } from \"../types/beverage\"\nimport { BASE_URL } from \"./const\"\n\nexport const getBeer = async (types: string | null): Promise<IBeer[]> => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/beers/ale`)\n  return response.ok ? await response.json() : null\n}\n\nexport const getWine = async (values: string[]): Promise<IWine[]> => {\n  const list = []\n  for(const value of values) {\n    list.push(await fetch(`${BASE_URL}/wines/${value}`))\n  }\n  const rp = await Promise.all(list)\n  console.log(\"rp\",rp)\n  \n  const response = await fetch(`${BASE_URL}/wines/reds`)\n  if(!response.ok) return null;\n  const jsonResult = await response.json()\n  const result = jsonResult.slice(0,20)\n  return result\n}\nexport const getCoffee = async (types: string | null): Promise<ICoffee[]> => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/coffee/iced`)\n  return response.ok ? await response.json() : null\n}"],"mappings":"AACA,SAASA,QAAQ,QAAQ,SAAS;AAElC,OAAO,MAAMC,OAAO,GAAG,MAAOC,KAAoB,IAAuB;EACvE;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,YAAW,CAAC;EACrD,OAAOG,QAAQ,CAACE,EAAE,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE,GAAG,IAAI;AACnD,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAOC,MAAgB,IAAuB;EACnE,MAAMC,IAAI,GAAG,EAAE;EACf,KAAI,MAAMC,KAAK,IAAIF,MAAM,EAAE;IACzBC,IAAI,CAACE,IAAI,CAAC,MAAMP,KAAK,CAAE,GAAEJ,QAAS,UAASU,KAAM,EAAC,CAAC,CAAC;EACtD;EACA,MAAME,EAAE,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;EAClCM,OAAO,CAACC,GAAG,CAAC,IAAI,EAACJ,EAAE,CAAC;EAEpB,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,aAAY,CAAC;EACtD,IAAG,CAACG,QAAQ,CAACE,EAAE,EAAE,OAAO,IAAI;EAC5B,MAAMY,UAAU,GAAG,MAAMd,QAAQ,CAACG,IAAI,EAAE;EACxC,MAAMY,MAAM,GAAGD,UAAU,CAACE,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC;EACrC,OAAOD,MAAM;AACf,CAAC;AACD,OAAO,MAAME,SAAS,GAAG,MAAOlB,KAAoB,IAAyB;EAC3E;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,cAAa,CAAC;EACvD,OAAOG,QAAQ,CAACE,EAAE,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE,GAAG,IAAI;AACnD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}