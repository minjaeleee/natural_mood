{"ast":null,"code":"var _jsxFileName = \"/Users/minjaelee/Desktop/development/natural_mood/src/router.tsx\";\nimport { createBrowserRouter } from \"react-router-dom\";\nimport { Layout } from \"./layout/Layout\";\nimport { routerData } from \"./routerData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const router = createBrowserRouter(routerData.map(router => {\n  return {\n    path: router.path,\n    element: /*#__PURE__*/_jsxDEV(Layout, {\n      isNavBar: true,\n      children: [\" \", router.element, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 18\n    }, this)\n  };\n}));\nexport const SidebarContent = routerData.reduce(_c = (prev, router) => {\n  return [...prev, {\n    id: router.id,\n    path: router.path,\n    label: router.label,\n    isNavBar: router.isNavBar\n  }];\n}, []);\n_c2 = SidebarContent;\nvar _c, _c2;\n$RefreshReg$(_c, \"SidebarContent$routerData.reduce\");\n$RefreshReg$(_c2, \"SidebarContent\");","map":{"version":3,"names":["createBrowserRouter","Layout","routerData","jsxDEV","_jsxDEV","router","map","path","element","isNavBar","children","fileName","_jsxFileName","lineNumber","columnNumber","SidebarContent","reduce","_c","prev","id","label","_c2","$RefreshReg$"],"sources":["/Users/minjaelee/Desktop/development/natural_mood/src/router.tsx"],"sourcesContent":["import { createBrowserRouter } from \"react-router-dom\";\nimport { Layout } from \"./layout/Layout\";\nimport { routerData } from \"./routerData\";\n\ninterface ISidebarContent {\n  id: number,\n  path: string,\n  label: string\n  isNavBar: boolean;\n}\n\nexport const router = createBrowserRouter(\n  routerData.map(router => {\n      return {\n        path: router.path,\n        element: <Layout isNavBar={true}> {router.element} </Layout>\n      }\n  })\n)\n\nexport const SidebarContent: ISidebarContent[] = routerData.reduce((prev, router) => {\n  return [\n    ...prev,\n    {\n      id: router.id,\n      path: router.path,\n      label: router.label,\n      isNavBar: router.isNavBar\n    }\n  ]\n}, [] as ISidebarContent[])"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,kBAAkB;AACtD,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1C,OAAO,MAAMC,MAAM,GAAGL,mBAAmB,CACvCE,UAAU,CAACI,GAAG,CAACD,MAAM,IAAI;EACrB,OAAO;IACLE,IAAI,EAAEF,MAAM,CAACE,IAAI;IACjBC,OAAO,eAAEJ,OAAA,CAACH,MAAM;MAACQ,QAAQ,EAAE,IAAK;MAAAC,QAAA,GAAC,GAAC,EAACL,MAAM,CAACG,OAAO,EAAC,GAAC;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACrD,CAAC;AACL,CAAC,CAAC,CACH;AAED,OAAO,MAAMC,cAAiC,GAAGb,UAAU,CAACc,MAAM,CAAAC,EAAA,GAACA,CAACC,IAAI,EAAEb,MAAM,KAAK;EACnF,OAAO,CACL,GAAGa,IAAI,EACP;IACEC,EAAE,EAAEd,MAAM,CAACc,EAAE;IACbZ,IAAI,EAAEF,MAAM,CAACE,IAAI;IACjBa,KAAK,EAAEf,MAAM,CAACe,KAAK;IACnBX,QAAQ,EAAEJ,MAAM,CAACI;EACnB,CAAC,CACF;AACH,CAAC,EAAE,EAAE,CAAsB;AAAAY,GAAA,GAVdN,cAAiC;AAAA,IAAAE,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}