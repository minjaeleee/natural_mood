{"ast":null,"code":"import { BASE_URL } from \"./const\";\nexport const getBeer = async types => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/beers/ale`);\n  return response.ok ? await response.json() : null;\n};\nexport const getWine = async (values, order) => {\n  if ((values === null || values === void 0 ? void 0 : values.length) < 2) {\n    // 단일 선택 및 기본 값\n    const res = await fetch(`${BASE_URL}/wines/${values[0] || 'reds'}`);\n    if (!res.ok) return;\n    const resJson = await res.json();\n    if (order) {\n      const result = resJson.slice(order.from, order.size);\n      return result;\n    }\n    const result = resJson.slice(0, 20);\n    return result;\n  } else {\n    // 중복 선택\n    const list = [];\n    for (const value of values) {\n      const res = await fetch(`${BASE_URL}/wines/${value}`);\n      if (!res.ok) return list;\n      const resJson = await res.json();\n      list.push(...resJson);\n    }\n    const result = list.slice(0, 20);\n    return result;\n  }\n};\nexport const getCoffee = async types => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/coffee/iced`);\n  return response.ok ? await response.json() : null;\n};","map":{"version":3,"names":["BASE_URL","getBeer","types","response","fetch","ok","json","getWine","values","order","length","res","resJson","result","slice","from","size","list","value","push","getCoffee"],"sources":["/Users/minjaelee/Desktop/development/natural_mood/src/api/beverage.ts"],"sourcesContent":["import { IBeer, ICoffee, IWine } from \"../types/beverage\"\nimport { BASE_URL } from \"./const\"\n\ninterface IOrder {\n  from: number,\n  size: number\n}\n\ntype value = string[] | []\ntype order = IOrder | null\n\nexport const getBeer = async (types: string | null): Promise<IBeer[]> => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/beers/ale`)\n  return response.ok ? await response.json() : null\n}\n\nexport const getWine = async (values: value, order: order): Promise<IWine[]> => {\n  if(values?.length < 2) {\n    // 단일 선택 및 기본 값\n    const res = await fetch(`${BASE_URL}/wines/${values[0] || 'reds'}`)\n    if(!res.ok) return;\n    const resJson = await res.json()\n    if(order) {\n      const result = resJson.slice(order.from, order.size)\n      return result\n    }\n    const result = resJson.slice(0,20)\n    return result\n  } else {\n    // 중복 선택\n    const list = []\n    for(const value of values) {\n      const res = await fetch(`${BASE_URL}/wines/${value}`)\n      if(!res.ok) return list;\n      const resJson = await res.json()\n      list.push(...resJson)\n    }\n    const result = list.slice(0,20)\n    return result\n  }\n}\nexport const getCoffee = async (types: string | null): Promise<ICoffee[]> => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/coffee/iced`)\n  return response.ok ? await response.json() : null\n}"],"mappings":"AACA,SAASA,QAAQ,QAAQ,SAAS;AAUlC,OAAO,MAAMC,OAAO,GAAG,MAAOC,KAAoB,IAAuB;EACvE;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,YAAW,CAAC;EACrD,OAAOG,QAAQ,CAACE,EAAE,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE,GAAG,IAAI;AACnD,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAOC,MAAa,EAAEC,KAAY,KAAuB;EAC9E,IAAG,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,MAAM,IAAG,CAAC,EAAE;IACrB;IACA,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAAE,GAAEJ,QAAS,UAASQ,MAAM,CAAC,CAAC,CAAC,IAAI,MAAO,EAAC,CAAC;IACnE,IAAG,CAACG,GAAG,CAACN,EAAE,EAAE;IACZ,MAAMO,OAAO,GAAG,MAAMD,GAAG,CAACL,IAAI,EAAE;IAChC,IAAGG,KAAK,EAAE;MACR,MAAMI,MAAM,GAAGD,OAAO,CAACE,KAAK,CAACL,KAAK,CAACM,IAAI,EAAEN,KAAK,CAACO,IAAI,CAAC;MACpD,OAAOH,MAAM;IACf;IACA,MAAMA,MAAM,GAAGD,OAAO,CAACE,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC;IAClC,OAAOD,MAAM;EACf,CAAC,MAAM;IACL;IACA,MAAMI,IAAI,GAAG,EAAE;IACf,KAAI,MAAMC,KAAK,IAAIV,MAAM,EAAE;MACzB,MAAMG,GAAG,GAAG,MAAMP,KAAK,CAAE,GAAEJ,QAAS,UAASkB,KAAM,EAAC,CAAC;MACrD,IAAG,CAACP,GAAG,CAACN,EAAE,EAAE,OAAOY,IAAI;MACvB,MAAML,OAAO,GAAG,MAAMD,GAAG,CAACL,IAAI,EAAE;MAChCW,IAAI,CAACE,IAAI,CAAC,GAAGP,OAAO,CAAC;IACvB;IACA,MAAMC,MAAM,GAAGI,IAAI,CAACH,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC;IAC/B,OAAOD,MAAM;EACf;AACF,CAAC;AACD,OAAO,MAAMO,SAAS,GAAG,MAAOlB,KAAoB,IAAyB;EAC3E;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,cAAa,CAAC;EACvD,OAAOG,QAAQ,CAACE,EAAE,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE,GAAG,IAAI;AACnD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}