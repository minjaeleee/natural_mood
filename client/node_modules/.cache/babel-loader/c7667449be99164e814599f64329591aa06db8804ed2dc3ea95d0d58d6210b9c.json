{"ast":null,"code":"var _jsxFileName = \"/Users/minjaelee/Desktop/development/natural_mood/src/pages/List/WineList.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getWine } from \"../../api/beverage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const wineTypes = [{\n  id: 0,\n  label: '레드 와인',\n  src: '/img/red-wine.jpg',\n  alt: 'red wine'\n}, {\n  id: 1,\n  label: '화이트 와인',\n  src: '/img/white-wine.jpg',\n  alt: 'white wine'\n}, {\n  id: 2,\n  label: '로제 와인',\n  src: '/img/rose-wine.jpg',\n  alt: 'rose wine'\n}, {\n  id: 3,\n  label: '스파클링 와인',\n  src: '/img/sparkling-wine.jpg',\n  alt: 'sparkling wine'\n}, {\n  id: 4,\n  label: '포트 와인',\n  src: '/img/port-wine.jpg',\n  alt: 'port wine'\n}, {\n  id: 5,\n  label: '디저트',\n  src: '/img/dessert.jpg',\n  alt: 'dessert'\n}];\nexport const WineList = () => {\n  _s();\n  const [data, setData] = useState([]);\n  // const {currentPath} = useRouter()\n  // const types = ['beers', 'wines', 'coffee']\n  // const pathArray = currentPath.split('/')\n  // const lastPath = pathArray[pathArray.length-1]\n\n  useEffect(() => {\n    (async () => {\n      // const getWineData = await getBeer(types.includes(lastPath) ? lastPath : null)\n      const getWineData = await getWine(null);\n      setData(getWineData);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: wineTypes.map(type => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: type.src,\n        alt: type.alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n};\n_s(WineList, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = WineList;\nvar _c;\n$RefreshReg$(_c, \"WineList\");","map":{"version":3,"names":["useEffect","useState","getWine","jsxDEV","_jsxDEV","wineTypes","id","label","src","alt","WineList","_s","data","setData","getWineData","children","map","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/minjaelee/Desktop/development/natural_mood/src/pages/List/WineList.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { getWine } from \"../../api/beverage\"\nimport { IWine } from \"../../types/beverage\"\nimport {FaWineGlassAlt} from 'react-icons/fa'\n\ninterface IWineTypes {\n  id: number,\n  label: string,\n  src: string,\n  alt: string\n}\n\nexport const wineTypes: IWineTypes[] = [\n  {\n    id: 0,\n    label: '레드 와인',\n    src: '/img/red-wine.jpg',\n    alt: 'red wine'\n  },\n  {\n    id: 1,\n    label: '화이트 와인',\n    src: '/img/white-wine.jpg',\n    alt: 'white wine'\n  },\n  {\n    id: 2,\n    label: '로제 와인',\n    src: '/img/rose-wine.jpg',\n    alt: 'rose wine'\n  },\n  {\n    id: 3,\n    label: '스파클링 와인',\n    src: '/img/sparkling-wine.jpg',\n    alt: 'sparkling wine'\n  },\n  {\n    id: 4,\n    label: '포트 와인',\n    src: '/img/port-wine.jpg',\n    alt: 'port wine'\n  },\n  {\n    id: 5,\n    label: '디저트',\n    src: '/img/dessert.jpg',\n    alt: 'dessert'\n  },\n]\n\nexport const WineList = () => {\n  const [data, setData] = useState<IWine | []>([])\n  // const {currentPath} = useRouter()\n  // const types = ['beers', 'wines', 'coffee']\n  // const pathArray = currentPath.split('/')\n  // const lastPath = pathArray[pathArray.length-1]\n\n  useEffect(()=>{\n    (\n      async()=>{\n        // const getWineData = await getBeer(types.includes(lastPath) ? lastPath : null)\n        const getWineData = await getWine(null)\n        setData(getWineData)\n      }\n    )()\n  },[])\n  \n  return (   \n      <div>\n        {\n          wineTypes.map(type => {\n            return (\n              <img\n                src={type.src}\n                alt={type.alt}\n              />\n            )\n          })\n        }\n      </div>\n  )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAW5C,OAAO,MAAMC,SAAuB,GAAG,CACrC;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,mBAAmB;EACxBC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,GAAG,EAAE,qBAAqB;EAC1BC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,oBAAoB;EACzBC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,SAAS;EAChBC,GAAG,EAAE,yBAAyB;EAC9BC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,oBAAoB;EACzBC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,KAAK;EACZC,GAAG,EAAE,kBAAkB;EACvBC,GAAG,EAAE;AACP,CAAC,CACF;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAa,EAAE,CAAC;EAChD;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAI;IACZ,CACE,YAAS;MACP;MACA,MAAMc,WAAW,GAAG,MAAMZ,OAAO,CAAC,IAAI,CAAC;MACvCW,OAAO,CAACC,WAAW,CAAC;IACtB,CAAC,GACA;EACL,CAAC,EAAC,EAAE,CAAC;EAEL,oBACIV,OAAA;IAAAW,QAAA,EAEIV,SAAS,CAACW,GAAG,CAACC,IAAI,IAAI;MACpB,oBACEb,OAAA;QACEI,GAAG,EAAES,IAAI,CAACT,GAAI;QACdC,GAAG,EAAEQ,IAAI,CAACR;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACd;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEA;AAEZ,CAAC;AAAAV,EAAA,CA/BYD,QAAQ;AAAAY,EAAA,GAARZ,QAAQ;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}