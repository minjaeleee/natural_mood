{"ast":null,"code":"var _jsxFileName = \"/Users/minjaelee/Desktop/development/natural_mood/src/pages/List/CoffeeList.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const coffeTypes = [{\n  id: 0,\n  label: '아이스 커피',\n  type: 'iced',\n  src: '/img/ice-coffee.jpg',\n  alt: 'ice coffee'\n}, {\n  id: 1,\n  label: '따뜻한 커피',\n  type: 'hot',\n  src: '/img/hot-coffee.jpg',\n  alt: 'hot coffee'\n}];\nexport const CoffeeList = () => {\n  // const [data, setData] = useState<ICoffee[] | []>([])\n  // const {currentPath} = useRouter()\n  // const types = ['beers', 'wines', 'coffee']\n  // const pathArray = currentPath.split('/')\n  // const lastPath = pathArray[pathArray.length-1]\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"sss\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = CoffeeList;\nvar _c;\n$RefreshReg$(_c, \"CoffeeList\");","map":{"version":3,"names":["coffeTypes","id","label","type","src","alt","CoffeeList","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/minjaelee/Desktop/development/natural_mood/src/pages/List/CoffeeList.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { getCoffee } from \"../../api/beverage\"\nimport { IBeverageType, ICoffee } from \"../../types/beverage\"\nimport { useRouter } from \"../../useHook/useRouter\"\nimport { ListItem } from \"./ListItem\"\nimport { TypeList } from \"./TypeList\"\n\nimport styles from'./WineList.module.scss'\n\nexport const coffeTypes: IBeverageType[] = [\n  {\n    id: 0,\n    label: '아이스 커피',\n    type: 'iced',\n    src: '/img/ice-coffee.jpg',\n    alt: 'ice coffee'\n  },\n  {\n    id: 1,\n    label: '따뜻한 커피',\n    type: 'hot',\n    src: '/img/hot-coffee.jpg',\n    alt: 'hot coffee'\n  },\n]\n\nexport const CoffeeList = () => {\n  // const [data, setData] = useState<ICoffee[] | []>([])\n  // const {currentPath} = useRouter()\n  // const types = ['beers', 'wines', 'coffee']\n  // const pathArray = currentPath.split('/')\n  // const lastPath = pathArray[pathArray.length-1]\n  return (   \n    <div>\n      {/* <TypeList title={\"커피\"} typeList={coffeTypes}/>\n      <h1 className={styles.header}> 커피를 알아봐요 </h1>\n      <section className={styles.itemWrapper}>\n          {\n            data?.map((el:ICoffee) => {\n              return (\n                  <ListItem \n                    key={el.image+el.id}\n                    src={el.image}\n                    title={el.title} \n                    info={el.description} \n                    options={null} \n                  /> \n              )\n            })\n          }\n        </section> */}\n        sss\n  </div>\n  )\n}"],"mappings":";;AASA,OAAO,MAAMA,UAA2B,GAAG,CACzC;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,MAAM;EACZC,GAAG,EAAE,qBAAqB;EAC1BC,GAAG,EAAE;AACP,CAAC,EACD;EACEJ,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,KAAK;EACXC,GAAG,EAAE,qBAAqB;EAC1BC,GAAG,EAAE;AACP,CAAC,CACF;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B;EACA;EACA;EACA;EACA;EACA,oBACEC,OAAA;IAAAC,QAAA,EAiBkB;EAEpB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAER,CAAC;AAAAC,EAAA,GA5BYP,UAAU;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}