{"ast":null,"code":"var _jsxFileName = \"/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/List/TypeList.tsx\",\n  _s = $RefreshSig$();\nimport { useLocation } from 'react-router-dom';\nimport { useFilterType } from '../../useHook/useFilterType';\nimport styles from './TypeList.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TypeList = _ref => {\n  _s();\n  let {\n    title,\n    typeList\n  } = _ref;\n  const {\n    search\n  } = useLocation();\n  const {\n    handleTypeQueryString\n  } = useFilterType({\n    search\n  });\n  const onClickType = type => {\n    handleTypeQueryString(type);\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \\uC5B4\\uB5A4 \", title, \"\\uC744 \\uCC3E\\uC73C\\uC2DC\\uB098\\uC694? \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.itemWrapper,\n      children: typeList.map(list => {\n        const {\n          label,\n          src,\n          alt,\n          type\n        } = list;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.list,\n          onClick: () => onClickType(type),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.imgBox,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: styles.img,\n              src: src,\n              alt: alt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.label,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, src + label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(TypeList, \"e8wZlkSIOLJpKf1SA3nNrEOP+5E=\", false, function () {\n  return [useLocation, useFilterType];\n});\n_c = TypeList;\nvar _c;\n$RefreshReg$(_c, \"TypeList\");","map":{"version":3,"names":["useLocation","useFilterType","styles","jsxDEV","_jsxDEV","TypeList","_ref","_s","title","typeList","search","handleTypeQueryString","onClickType","type","className","wrapper","children","fileName","_jsxFileName","lineNumber","columnNumber","itemWrapper","map","list","label","src","alt","onClick","imgBox","img","_c","$RefreshReg$"],"sources":["/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/List/TypeList.tsx"],"sourcesContent":["import { useLocation } from 'react-router-dom'\nimport { IBeverageType } from '../../types/beverage'\nimport { useFilterType } from '../../useHook/useFilterType'\n\nimport styles from './TypeList.module.scss'\n\nexport const TypeList = ({title, typeList}) => {\n  const {search} = useLocation()\n  const {handleTypeQueryString} = useFilterType({search})\n\n  const onClickType = (type:string) => {\n    handleTypeQueryString(type)\n  }\n\n  return (\n    <aside className={styles.wrapper}>\n      <h1> 어떤 {title}을 찾으시나요? </h1>\n      <ul className={styles.itemWrapper}>\n        {\n          typeList.map((list:IBeverageType) => {\n            const {label, src, alt, type} = list\n            return (\n              <li \n                className={styles.list} \n                key={src+label}\n                onClick={()=>onClickType(type)}\n              >\n                <div className={styles.imgBox}>\n                  <img\n                    className={styles.img}\n                    src={src}\n                    alt={alt}\n                  />\n                </div>\n                <p className={styles.label}>\n                  {label}\n                </p>\n              </li>\n              )\n          })\n        }\n      </ul>\n    </aside>\n  )\n}\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,aAAa,QAAQ,6BAA6B;AAE3D,OAAOC,MAAM,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,OAAO,MAAMC,QAAQ,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAACC,KAAK;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACxC,MAAM;IAACI;EAAM,CAAC,GAAGV,WAAW,EAAE;EAC9B,MAAM;IAACW;EAAqB,CAAC,GAAGV,aAAa,CAAC;IAACS;EAAM,CAAC,CAAC;EAEvD,MAAME,WAAW,GAAIC,IAAW,IAAK;IACnCF,qBAAqB,CAACE,IAAI,CAAC;EAC7B,CAAC;EAED,oBACET,OAAA;IAAOU,SAAS,EAAEZ,MAAM,CAACa,OAAQ;IAAAC,QAAA,gBAC/BZ,OAAA;MAAAY,QAAA,GAAI,gBAAI,EAACR,KAAK,EAAC,yCAAS;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC7BhB,OAAA;MAAIU,SAAS,EAAEZ,MAAM,CAACmB,WAAY;MAAAL,QAAA,EAE9BP,QAAQ,CAACa,GAAG,CAAEC,IAAkB,IAAK;QACnC,MAAM;UAACC,KAAK;UAAEC,GAAG;UAAEC,GAAG;UAAEb;QAAI,CAAC,GAAGU,IAAI;QACpC,oBACEnB,OAAA;UACEU,SAAS,EAAEZ,MAAM,CAACqB,IAAK;UAEvBI,OAAO,EAAEA,CAAA,KAAIf,WAAW,CAACC,IAAI,CAAE;UAAAG,QAAA,gBAE/BZ,OAAA;YAAKU,SAAS,EAAEZ,MAAM,CAAC0B,MAAO;YAAAZ,QAAA,eAC5BZ,OAAA;cACEU,SAAS,EAAEZ,MAAM,CAAC2B,GAAI;cACtBJ,GAAG,EAAEA,GAAI;cACTC,GAAG,EAAEA;YAAI;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACT;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACE,eACNhB,OAAA;YAAGU,SAAS,EAAEZ,MAAM,CAACsB,KAAM;YAAAR,QAAA,EACxBQ;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACJ;QAAA,GAZCK,GAAG,GAACD,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAaX;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAED;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEZ,CAAC;AAAAb,EAAA,CAtCYF,QAAQ;EAAA,QACFL,WAAW,EACIC,aAAa;AAAA;AAAA6B,EAAA,GAFlCzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}