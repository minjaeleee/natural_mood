{"ast":null,"code":"import { BASE_URL } from \"./const\";\nexport const getBeer = async types => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/beers/ale`);\n  return response.ok ? await response.json() : null;\n};\nexport const getSingletWine = async (values, from, size) => {\n  const res = await fetch(`${BASE_URL}/wines/${values ? values[0] : 'reds'}`);\n  if (!res.ok) return;\n  const resJson = await res.json();\n  console.log(from, size);\n  const result = resJson.slice(from, size);\n  console.log(\"result\", result);\n  return result;\n};\nexport const getMultiWine = async (values, from, size) => {\n  const list = [];\n  for (const value of values) {\n    const res = await fetch(`${BASE_URL}/wines/${value}`);\n    if (!res.ok) return list;\n    const resJson = await res.json();\n    list.push(...resJson);\n  }\n  const result = list.slice(from, size);\n  return result;\n};\nexport const getCoffee = async types => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/coffee/iced`);\n  return response.ok ? await response.json() : null;\n};","map":{"version":3,"names":["BASE_URL","getBeer","types","response","fetch","ok","json","getSingletWine","values","from","size","res","resJson","console","log","result","slice","getMultiWine","list","value","push","getCoffee"],"sources":["/Users/minjaelee/Desktop/development/natural_mood/src/api/beverage.ts"],"sourcesContent":["import { IBeer, ICoffee, IWine } from \"../types/beverage\"\nimport { BASE_URL } from \"./const\"\n\ninterface IOrder {\n  from: number,\n  size: number\n}\n\ntype value = string[] | undefined\n\nexport const getBeer = async (types: string | null): Promise<IBeer[]> => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/beers/ale`)\n  return response.ok ? await response.json() : null\n}\n\nexport const getSingletWine = async (values: value, from: number, size: number): Promise<IWine[]> => {\n    const res = await fetch(`${BASE_URL}/wines/${values ? values[0] : 'reds'}`)\n    if(!res.ok) return;\n    const resJson = await res.json()\n    console.log(from,size)\n    const result = resJson.slice(from,size)\n    console.log(\"result\",result)\n    return result\n}\n\nexport const getMultiWine = async (values: value, from: number, size: number): Promise<IWine[]> => {\n  const list = []\n  for(const value of values) {\n    const res = await fetch(`${BASE_URL}/wines/${value}`)\n    if(!res.ok) return list;\n    const resJson = await res.json()\n    list.push(...resJson)\n  }\n  const result = list.slice(from, size)\n  return result\n}\n\n\nexport const getCoffee = async (types: string | null): Promise<ICoffee[]> => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/coffee/iced`)\n  return response.ok ? await response.json() : null\n}"],"mappings":"AACA,SAASA,QAAQ,QAAQ,SAAS;AASlC,OAAO,MAAMC,OAAO,GAAG,MAAOC,KAAoB,IAAuB;EACvE;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,YAAW,CAAC;EACrD,OAAOG,QAAQ,CAACE,EAAE,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE,GAAG,IAAI;AACnD,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,MAAa,EAAEC,IAAY,EAAEC,IAAY,KAAuB;EACjG,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAAE,GAAEJ,QAAS,UAASQ,MAAM,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAG,MAAO,EAAC,CAAC;EAC3E,IAAG,CAACG,GAAG,CAACN,EAAE,EAAE;EACZ,MAAMO,OAAO,GAAG,MAAMD,GAAG,CAACL,IAAI,EAAE;EAChCO,OAAO,CAACC,GAAG,CAACL,IAAI,EAACC,IAAI,CAAC;EACtB,MAAMK,MAAM,GAAGH,OAAO,CAACI,KAAK,CAACP,IAAI,EAACC,IAAI,CAAC;EACvCG,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACC,MAAM,CAAC;EAC5B,OAAOA,MAAM;AACjB,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAOT,MAAa,EAAEC,IAAY,EAAEC,IAAY,KAAuB;EACjG,MAAMQ,IAAI,GAAG,EAAE;EACf,KAAI,MAAMC,KAAK,IAAIX,MAAM,EAAE;IACzB,MAAMG,GAAG,GAAG,MAAMP,KAAK,CAAE,GAAEJ,QAAS,UAASmB,KAAM,EAAC,CAAC;IACrD,IAAG,CAACR,GAAG,CAACN,EAAE,EAAE,OAAOa,IAAI;IACvB,MAAMN,OAAO,GAAG,MAAMD,GAAG,CAACL,IAAI,EAAE;IAChCY,IAAI,CAACE,IAAI,CAAC,GAAGR,OAAO,CAAC;EACvB;EACA,MAAMG,MAAM,GAAGG,IAAI,CAACF,KAAK,CAACP,IAAI,EAAEC,IAAI,CAAC;EACrC,OAAOK,MAAM;AACf,CAAC;AAGD,OAAO,MAAMM,SAAS,GAAG,MAAOnB,KAAoB,IAAyB;EAC3E;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,cAAa,CAAC;EACvD,OAAOG,QAAQ,CAACE,EAAE,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE,GAAG,IAAI;AACnD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}