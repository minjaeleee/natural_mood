{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from 'react';\nconst useInfiniteScroll = targetEl => {\n  _s();\n  const observerRef = useRef(null);\n  const [intersecting, setIntersecting] = useState(false);\n  const getObserver = useCallback(() => {\n    console.log(observerRef.current);\n    // if (!observerRef.current) {\n    //   observerRef.current = new IntersectionObserver(entries => setIntersecting(\n    //     // 없으면 intersecting false, 있으면 intersecting true\n    //     entries.some(entry => entry.isIntersecting)\n    //   ))\n    // }\n\n    return observerRef.current;\n  }, [observerRef.current]);\n  useEffect(() => {\n    if (targetEl.current) getObserver().observe(targetEl.current);\n    return () => {\n      getObserver().disconnect();\n    };\n  }, [targetEl.current]);\n  return intersecting;\n};\n_s(useInfiniteScroll, \"wgJwkE67wQsXc1eiCmrL0CTwPqc=\");\nexport default useInfiniteScroll;","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","useInfiniteScroll","targetEl","_s","observerRef","intersecting","setIntersecting","getObserver","console","log","current","observe","disconnect"],"sources":["/Users/minjaelee/Desktop/development/natural_mood/src/useHook/useInfiniteScroll.tsx"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react'\n\nconst useInfiniteScroll = targetEl => {\n  const observerRef = useRef(null)\n  const [intersecting, setIntersecting] = useState(false)\n\n  const getObserver = useCallback(() => {\n    console.log(observerRef.current)\n    // if (!observerRef.current) {\n    //   observerRef.current = new IntersectionObserver(entries => setIntersecting(\n    //     // 없으면 intersecting false, 있으면 intersecting true\n    //     entries.some(entry => entry.isIntersecting)\n    //   ))\n    // }\n\n    return observerRef.current\n  }, [observerRef.current])\n\n  useEffect(() => {\n    if (targetEl.current) getObserver().observe(targetEl.current)\n    return () => {\n      getObserver().disconnect()\n    }\n  }, [targetEl.current])\n\n  return intersecting\n}\n\nexport default useInfiniteScroll"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAEhE,MAAMC,iBAAiB,GAAGC,QAAQ,IAAI;EAAAC,EAAA;EACpC,MAAMC,WAAW,GAAGL,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMU,WAAW,GAAGP,WAAW,CAAC,MAAM;IACpCQ,OAAO,CAACC,GAAG,CAACL,WAAW,CAACM,OAAO,CAAC;IAChC;IACA;IACA;IACA;IACA;IACA;;IAEA,OAAON,WAAW,CAACM,OAAO;EAC5B,CAAC,EAAE,CAACN,WAAW,CAACM,OAAO,CAAC,CAAC;EAEzBZ,SAAS,CAAC,MAAM;IACd,IAAII,QAAQ,CAACQ,OAAO,EAAEH,WAAW,EAAE,CAACI,OAAO,CAACT,QAAQ,CAACQ,OAAO,CAAC;IAC7D,OAAO,MAAM;MACXH,WAAW,EAAE,CAACK,UAAU,EAAE;IAC5B,CAAC;EACH,CAAC,EAAE,CAACV,QAAQ,CAACQ,OAAO,CAAC,CAAC;EAEtB,OAAOL,YAAY;AACrB,CAAC;AAAAF,EAAA,CAxBKF,iBAAiB;AA0BvB,eAAeA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}