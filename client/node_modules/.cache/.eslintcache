[{"/Users/minjaelee/Desktop/development/natural_mood/client/src/index.tsx":"1","/Users/minjaelee/Desktop/development/natural_mood/client/src/reportWebVitals.ts":"2","/Users/minjaelee/Desktop/development/natural_mood/client/src/App.tsx":"3","/Users/minjaelee/Desktop/development/natural_mood/client/src/store/modules/index.ts":"4","/Users/minjaelee/Desktop/development/natural_mood/client/src/router.tsx":"5","/Users/minjaelee/Desktop/development/natural_mood/client/src/store/modules/cart.ts":"6","/Users/minjaelee/Desktop/development/natural_mood/client/src/routerData.tsx":"7","/Users/minjaelee/Desktop/development/natural_mood/client/src/layout/Layout.tsx":"8","/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/Home.tsx":"9","/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/Cart.tsx":"10","/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/Article.tsx":"11","/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/ListPage.tsx":"12","/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/Review.tsx":"13","/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/List/BeerList.tsx":"14","/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/List/WineList.tsx":"15","/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/List/CoffeeList.tsx":"16","/Users/minjaelee/Desktop/development/natural_mood/client/src/layout/Header.tsx":"17","/Users/minjaelee/Desktop/development/natural_mood/client/src/layout/sidebar/SideBar.tsx":"18","/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/List/TypeList.tsx":"19","/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/List/ListItem.tsx":"20","/Users/minjaelee/Desktop/development/natural_mood/client/src/api/beverage.ts":"21","/Users/minjaelee/Desktop/development/natural_mood/client/src/useHook/useInfiniteScroll.tsx":"22","/Users/minjaelee/Desktop/development/natural_mood/client/src/useHook/useRouter.tsx":"23","/Users/minjaelee/Desktop/development/natural_mood/client/src/useHook/useFilterType.tsx":"24","/Users/minjaelee/Desktop/development/natural_mood/client/src/layout/sidebar/SideBarItem.tsx":"25","/Users/minjaelee/Desktop/development/natural_mood/client/src/api/const.ts":"26"},{"size":785,"mtime":1679642714397,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1679288029330,"results":"29","hashOfConfig":"28"},{"size":178,"mtime":1679642763392,"results":"30","hashOfConfig":"28"},{"size":648,"mtime":1679645680220,"results":"31","hashOfConfig":"28"},{"size":1221,"mtime":1679573988959,"results":"32","hashOfConfig":"28"},{"size":922,"mtime":1679646225480,"results":"33","hashOfConfig":"28"},{"size":1575,"mtime":1679573988959,"results":"34","hashOfConfig":"28"},{"size":645,"mtime":1679573988951,"results":"35","hashOfConfig":"28"},{"size":65,"mtime":1679366730464,"results":"36","hashOfConfig":"28"},{"size":65,"mtime":1679366730464,"results":"37","hashOfConfig":"28"},{"size":71,"mtime":1679366730463,"results":"38","hashOfConfig":"28"},{"size":70,"mtime":1679573988959,"results":"39","hashOfConfig":"28"},{"size":69,"mtime":1679366730464,"results":"40","hashOfConfig":"28"},{"size":1830,"mtime":1679573988955,"results":"41","hashOfConfig":"28"},{"size":3773,"mtime":1679646109012,"results":"42","hashOfConfig":"28"},{"size":1532,"mtime":1679573988956,"results":"43","hashOfConfig":"28"},{"size":506,"mtime":1679366730462,"results":"44","hashOfConfig":"28"},{"size":955,"mtime":1679573988952,"results":"45","hashOfConfig":"28"},{"size":1254,"mtime":1679573988958,"results":"46","hashOfConfig":"28"},{"size":995,"mtime":1679644922961,"results":"47","hashOfConfig":"28"},{"size":1377,"mtime":1679573988949,"results":"48","hashOfConfig":"28"},{"size":895,"mtime":1679573988961,"results":"49","hashOfConfig":"28"},{"size":218,"mtime":1679573988961,"results":"50","hashOfConfig":"28"},{"size":1170,"mtime":1679573988961,"results":"51","hashOfConfig":"28"},{"size":848,"mtime":1679573988953,"results":"52","hashOfConfig":"28"},{"size":52,"mtime":1679573988949,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mko24q",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/minjaelee/Desktop/development/natural_mood/client/src/index.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/reportWebVitals.ts",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/App.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/store/modules/index.ts",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/router.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/store/modules/cart.ts",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/routerData.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/layout/Layout.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/Home.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/Cart.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/Article.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/ListPage.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/Review.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/List/BeerList.tsx",["135"],[],"import { useEffect, useState } from \"react\"\nimport { getBeer } from \"../../api/beverage\"\nimport { IBeer, IBeverageType } from \"../../types/beverage\"\nimport { useRouter } from \"../../useHook/useRouter\"\nimport { ListItem } from \"./ListItem\"\nimport { TypeList } from \"./TypeList\"\n\nimport styles from './WineList.module.scss'\n\nexport const beerTypes:IBeverageType[] = [\n  {\n    id: 0,\n    label: '에일',\n    src: '/img/ale-beer.jpg',\n    type: 'ale',\n    alt: 'ale beer'\n  },\n  {\n    id: 1,\n    label: '흑맥주',\n    src: '/img/stouts-beer.jpg',\n    type: 'stout',\n    alt: 'stouts beer'\n  },\n  {\n    id: 2,\n    label: '레드 에일',\n    src: '/img/red-ale-beer.jpg',\n    type: 'red-ale',\n    alt: 're ale beer'\n  },\n]\n\nexport const BeerList = () => {\n  const [data, setData] = useState<IBeer[] | []>([])\n  // const {currentPath} = useRouter()\n  // const types = ['beers', 'wines', 'coffee']\n  // const pathArray = currentPath.split('/')\n  // const lastPath = pathArray[pathArray.length-1]\n\n  useEffect(()=>{\n    (\n      async()=>{\n        // const getBeerData = await getBeer(types.includes(lastPath) ? lastPath : null)\n        const getBeerData = await getBeer(null)\n        setData(getBeerData)\n      }\n    )()\n  },[])\n  \n  return (   \n      <div>\n        <TypeList title={\"맥주\"} typeList={beerTypes}/>\n        <h1 className={styles.header}> 레드와인을 알아봐요 </h1>\n        <section className={styles.itemWrapper}>\n          {\n            data?.map((el:IBeer) => {\n              return (\n                  <ListItem \n                    key={el.image+el.name}\n                    src={el.image}\n                    title={el.name} \n                    info={el.price} \n                    options={el.rating} \n                  /> \n              )\n            })\n          }\n      </section>\n      </div>\n  )\n}\n","/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/List/WineList.tsx",[],["136","137"],"/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/List/CoffeeList.tsx",["138","139","140","141","142","143","144","145"],[],"import { useEffect, useState } from \"react\"\nimport { getCoffee } from \"../../api/beverage\"\nimport { IBeverageType, ICoffee } from \"../../types/beverage\"\nimport { useRouter } from \"../../useHook/useRouter\"\nimport { ListItem } from \"./ListItem\"\nimport { TypeList } from \"./TypeList\"\n\nimport styles from'./WineList.module.scss'\n\nexport const coffeTypes: IBeverageType[] = [\n  {\n    id: 0,\n    label: '아이스 커피',\n    type: 'iced',\n    src: '/img/ice-coffee.jpg',\n    alt: 'ice coffee'\n  },\n  {\n    id: 1,\n    label: '따뜻한 커피',\n    type: 'hot',\n    src: '/img/hot-coffee.jpg',\n    alt: 'hot coffee'\n  },\n]\n\nexport const CoffeeList = () => {\n  console.log(\"coffee\")\n  // const [data, setData] = useState<ICoffee[] | []>([])\n  // const {currentPath} = useRouter()\n  // const types = ['beers', 'wines', 'coffee']\n  // const pathArray = currentPath.split('/')\n  // const lastPath = pathArray[pathArray.length-1]\n  return (   \n    <div>\n      {/* <TypeList title={\"커피\"} typeList={coffeTypes}/>\n      <h1 className={styles.header}> 커피를 알아봐요 </h1>\n      <section className={styles.itemWrapper}>\n          {\n            data?.map((el:ICoffee) => {\n              return (\n                  <ListItem \n                    key={el.image+el.id}\n                    src={el.image}\n                    title={el.title} \n                    info={el.description} \n                    options={null} \n                  /> \n              )\n            })\n          }\n        </section> */}\n        sssqqq\n  </div>\n  )\n}","/Users/minjaelee/Desktop/development/natural_mood/client/src/layout/Header.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/layout/sidebar/SideBar.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/List/TypeList.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/pages/List/ListItem.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/api/beverage.ts",["146"],[],"import { IBeer, ICoffee, IWine } from \"../types/beverage\"\nimport { BASE_URL } from \"./const\"\n\ninterface IOrder {\n  from: number,\n  size: number\n}\n\ntype value = string[] | undefined\n\nexport const getBeer = async (types: string | null): Promise<IBeer[]> => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/beers/ale`)\n  return response.ok ? await response.json() : null\n}\n\nexport const getSingletWine = async (values: value, from: number, size: number): Promise<IWine[]> => {\n    const res = await fetch(`${BASE_URL}/wines/${values ? values[0] : 'reds'}`)\n    if(!res.ok) return;\n    const resJson = await res.json()\n    const result = resJson.slice(from,size)\n    return result\n}\n\nexport const getMultiWine = async (values: value, from: number, size: number): Promise<IWine[]> => {\n  const list = []\n  for(const value of values) {\n    const res = await fetch(`${BASE_URL}/wines/${value}`)\n    if(!res.ok) return list;\n    const resJson = await res.json()\n    list.push(...resJson)\n  }\n  const result = list.slice(from, size)\n  return result\n}\n\n\nexport const getCoffee = async (types: string | null): Promise<ICoffee[]> => {\n  // const response = await fetch(`${BASE_URL}/beers/${types || 'ale'}`)\n  const response = await fetch(`${BASE_URL}/coffee/iced`)\n  return response.ok ? await response.json() : null\n}","/Users/minjaelee/Desktop/development/natural_mood/client/src/useHook/useInfiniteScroll.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/useHook/useRouter.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/useHook/useFilterType.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/layout/sidebar/SideBarItem.tsx",[],[],"/Users/minjaelee/Desktop/development/natural_mood/client/src/api/const.ts",[],[],{"ruleId":"147","severity":1,"message":"148","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":95,"column":5,"nodeType":"153","endLine":95,"endColumn":19,"suggestions":"154","suppressions":"155"},{"ruleId":"151","severity":1,"message":"156","line":107,"column":5,"nodeType":"153","endLine":107,"endColumn":13,"suggestions":"157","suppressions":"158"},{"ruleId":"147","severity":1,"message":"159","line":1,"column":10,"nodeType":"149","messageId":"150","endLine":1,"endColumn":19},{"ruleId":"147","severity":1,"message":"160","line":1,"column":21,"nodeType":"149","messageId":"150","endLine":1,"endColumn":29},{"ruleId":"147","severity":1,"message":"161","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":19},{"ruleId":"147","severity":1,"message":"162","line":3,"column":25,"nodeType":"149","messageId":"150","endLine":3,"endColumn":32},{"ruleId":"147","severity":1,"message":"148","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":19},{"ruleId":"147","severity":1,"message":"163","line":5,"column":10,"nodeType":"149","messageId":"150","endLine":5,"endColumn":18},{"ruleId":"147","severity":1,"message":"164","line":6,"column":10,"nodeType":"149","messageId":"150","endLine":6,"endColumn":18},{"ruleId":"147","severity":1,"message":"165","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":14},{"ruleId":"147","severity":1,"message":"166","line":4,"column":11,"nodeType":"149","messageId":"150","endLine":4,"endColumn":17},"@typescript-eslint/no-unused-vars","'useRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data.length', 'fetchMultiWineAPI', 'fetchSingleWineAPI', and 'getQueryStringValue'. Either include them or remove the dependency array.","ArrayExpression",["167"],["168"],"React Hook useEffect has missing dependencies: 'fetchMultiWineAPI', 'fetchSingleWineAPI', and 'getQueryStringValue'. Either include them or remove the dependency array.",["169"],["170"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'getCoffee' is defined but never used.","'ICoffee' is defined but never used.","'ListItem' is defined but never used.","'TypeList' is defined but never used.","'styles' is defined but never used.","'IOrder' is defined but never used.",{"desc":"171","fix":"172"},{"kind":"173","justification":"174"},{"desc":"175","fix":"176"},{"kind":"173","justification":"174"},"Update the dependencies array to be: [data.length, fetchMultiWineAPI, fetchSingleWineAPI, getQueryStringValue, intersecting]",{"range":"177","text":"178"},"directive","","Update the dependencies array to be: [fetchMultiWineAPI, fetchSingleWineAPI, getQueryStringValue, search]",{"range":"179","text":"180"},[2573,2587],"[data.length, fetchMultiWineAPI, fetchSingleWineAPI, getQueryStringValue, intersecting]",[2968,2976],"[fetchMultiWineAPI, fetchSingleWineAPI, getQueryStringValue, search]"]